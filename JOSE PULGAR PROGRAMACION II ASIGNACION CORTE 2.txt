Algoritmos y Programacion II
Jose Alberto Pulgar Perez, C.I 31.542.384
Asignacion Corte 2.



Ejercicio 1:  Declara una variable entera x con valor 10 y un puntero p que almacene la dirección de x.
#include <stdio.h>

int main() {
    int x = 10;   
    int *p = &x;  
   
    printf("Valor de x: %d\n", x);
    printf("Direccion de x: %p\n", (void *)&x);
    printf("Valor de p (direccion de x): %p\n", (void *)p);
    printf("Valor al que apunta p: %d\n", *p);

    return 0;
}























Ejercicio 2: Dado el siguiente código, modifica el valor de y usando el puntero ptr.
int main() {
    int y = 5;
    int *ptr = &y;
    
    *ptr = 20;
    printf("El nuevo valor de y es: %d\n", y);

    return 0;
}
















Ejercicio 3:
Usa aritmética de punteros para recorrer un arreglo y sumar sus elementos.
#include <stdio.h>

int main() {
    int sum = 0;
    int values[] = {1, 2, 3, 4, 5};
    int *ptr = values;

    for (int i = 0; i < 5; i++) { 
        sum += *(ptr + i); 
    }

    printf("La suma de los elementos es: %d\n", sum);
    return 0;
}















Ejercicio 4: Si p es un puntero a float y p = 0x1000, ¿qué dirección representa p + 3? (Supón sizeof(float) = 4).

p + 3 * sizeof(float)
= 0x1000 + 3 * 4
= 0x1000 + 12
= 0x100C
Por lo tanto, p + 3 representaría la dirección de memoria 0x100C.



























Ejercicio 5: Dado el arreglo int valores[] = {10, 20, 30, 40}, determina si las siguientes comparaciones son verdaderas o falsas:
int *p1 = valores; 
int *p2 = valores + 3; 
// a) p1 == p2 
// b) p1 < p2 
// c) p1 >= (valores + 4)

Las comparaciones son:

a) p1 == p2

p1 apunta al primer elemento de valores, es decir, p1 es igual a &valores[0].

p2 apunta al cuarto elemento de valores (valores + 3 es igual a &valores[3]).

Por lo tanto, esta comparación es falsa.

b) p1 < p2

p1 apunta a &valores[0] (dirección de memoria del primer elemento).

p2 apunta a &valores[3] (dirección de memoria del cuarto elemento).

Como la dirección de valores[0] es menor que la dirección de valores[3], esta comparación es verdadera.

c) p1 >= (valores + 4)

p1 apunta a &valores[0] (dirección de memoria del primer elemento).

valores + 4 apunta a una dirección de memoria justo después del último elemento del arreglo (&valores[4]).

Como p1 apunta a la dirección de &valores[0], que es menor que la dirección de &valores[4], esta comparación es falsa.

Resumiendo, las comparaciones son:

a) Falsa

b) Verdadera

c) Falsa











